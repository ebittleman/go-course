Summer Coding 2015
Introduction to Go
18 Jun 2015
Tags: golang, intro

Eric Bittleman
Head of Software Development, Heyo
ebittleman@heyo.com
https://heyo.com

* About Me

*Experience*

I have been developing software professionally for the past 8 years. 6 of which were in a team lead or management role.

*Professional*Interests*

- Web Development
- Systems Administration and Automation
- B2B Integrations
- Organizational Development and Engineering

* What is Go?

Go, or golang is a programming language that has the aim of making systems and network programming easier.

*What*can*you*make*with*it?*

- Websites
- Games
- Mobile Apps
- Presentations
- ... pretty much anything

* 

** What are we doing today?

*** Schedule

- Start off by getting me up to speed! How's camp going?
- Learn how to use some tools to write Go Code
- Go over the rules (syntax) of the Go programming language
- You're going to help me add some new feature to my Blog Program

.image ./images/golang-logo.png _ 225

* 

** How's it going?

*** Tell me about camp

What's your favorite project so far?

What do you think we are going to learn about today?

.image ./images/golang-logo.png _ 225

* Tools We Are Going To Be Using

* Sublime Text With GoSublime Plugin

.image ./images/sublime-logo.jpg

*Used*For*Editting*Code*

Features

- Code Coloring - Makes it easier to read code
- Code Completetion - Will show you available functions and variables
- Auto Formatting - Makes sure your code is well formatted and readable 
- Automatically Imports Packages - automaically detects and imports go packages

*  Git Bash

.image ./images/git-logo.png _ 225

*Used*to*run*the*GO*SDK*and*use*GIT*

Features

- Windows version of the BASH Shell
- Auto Completion of Commands
- Shows Extra Git Information

* Go SDK

.image ./images/golang-logo.png _ 225

*Used*For*Managing*Your*Workspace*

Features

- Can Run Your Programs On The Fly
- Automatically Compiles Your Projects
- Runs Test
- Downloads Dependencies

* GO TO
** Lets get started

.link https://gocamp-2015.appspot.com/ https://gocamp-2015.appspot.com/

* Hello World
** Your first go program

.play code/helloworld.go

* 
** The Breakdown
*** func main()

.code code/helloworld.go HLFUNC

*main()* is a special function that tells Go where your program starts

It doesn't take any input and does not provide any output

* What's a function?

* This is a function

.play code/add.go /^func Add/,/^}/

A function is a piece of code that takes some sort of input, operates on it, then returns the result.

*How*To*Make*A*Function*In*Go*

1. Start with the *func* keyword
2. Give it a name, here we used *Add*
3. List the input arguments inside of parenthesis, here we have *(a*int,*b*int)*
4. Tell Go what type of data your function is going to return, in this case it's an, *int*
5. Code up the body in between some curlies *{*}*

* 
** The Breakdown (continued)
*** fmt.Println("Hello World")

.code code/helloworld.go HLFMT

* 
** The Breakdown (continued)
*** Package

  package main

A package lets you group logically similar functionality into an easy to share library

























* Builtin Tools and Commands

- go - Manages go workspaces. Downloads, Compiles, Tests, Runs, and Installs Go projects

	Usage:

		go command [arguments]

	The commands are:

	    build       compile packages and dependencies
	    clean       remove object files
	    env         print Go environment information
	    fix         run go tool fix on packages
	    fmt         run gofmt on package sources
	    generate    generate Go files by processing source
	    get         download and install packages and dependencies
	    install     compile and install packages and dependencies
	    list        list packages
	    run         compile and run Go program
	    test        test packages
	    tool        run specified go tool
	    version     print Go version
	    vet         run go tool vet on packages

* Advanced Notes

*Basic*Features*

- Compiles To Machine Code
- Is garbage collected
- Builtin Primatives for Concurrency (channels)
- Has interfaces and structs like C++ but its not really object oriented
